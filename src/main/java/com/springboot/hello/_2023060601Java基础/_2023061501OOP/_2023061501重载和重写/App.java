package com.springboot.hello._2023060601Java基础._2023061501OOP._2023061501重载和重写;

public class App {
    /**
     * 重载面试题
     *
     * 什么是重载
     * 重载的应用场景
     * 重载和重写的区别
     *
     * 重载：一个类中，方法名相同，参数不同，包括参数类型、个数、顺序不同，适合在一个功能方法根据不同传参处理
     * 但是返回值类型不同不构成重载
     *
     * 重写：子类覆盖父类方法的实现，是对方法的覆盖扩展
     * 特殊规则，
     * 1方法名相同，参数必须相同，返回值类型可以不相同，但必须是父类返回值的派生类
     * 2访问修饰符权限不能比父类低
     * 3final修饰的不能被重写
     * 4子类和父类在同一个包中，子类可以访问除private和final的方法
     *  不在一个包中，子类只能访问父类的public protected的非final方法，属性
     * 5排除的异常的范围不能大于父类
     *
     *
     * 【父类的静态方法能否被子类重写，为什么？】
     * 不能:
     *
     * 静态方法只与类有关，不与实例有关，重写只适用于实例方法，不适用于静态方法。
     * 非静态方法，按重写规则，调用相应的类的实现方法，而静态方法只与类有关。
     * 因为静态方法是程序一运行就已经分配好了内存地址，而且该地址是固定的，
     * 所有引用到该方法的对象（父类或者子类）所指向的始终是同一个内存地址中的数据，
     * 即该静态方法。如果子类定义了相同名称的静态方法，只会新增一个内存地址，并不会重写。
     */
}
