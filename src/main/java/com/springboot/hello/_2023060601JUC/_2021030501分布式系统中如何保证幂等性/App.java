package com.springboot.hello._2023060601JUC._2021030501分布式系统中如何保证幂等性;

public class App {
    /**
     * 分布式事务中保证接口的幂等性
     *  第一个问题：什么是幂等性
     *      任意多次的操作的影响和一次执行的操作的影响相同
     *
     *  第二个问题：什么情况下要保证幂等性
     *      查询/删除天然就保证了幂等性
     *      在新增和更新时，需要保证幂等性
     *
     *  第三个问题：怎样才能保证幂等性
     *      加入唯一索引，例如创建订单时，在创建订单的页面，前端获取到唯一订单号，提交新增订单，如果没有被创建，
     *      新增订单。如果已经新增记录了，数据库会报错，这个时候直接给前端返回成功即可，或者再查询一次，返回成功
     *
     *      悲观锁
     *      在更新数据的时候，select * from table for udpate 进行数据锁定，是行锁
     *          要求的：where 条件一定要是主键或者唯一索引，不然会锁表
     *      乐观锁
     *      在更新数据时，表中有version字段，查询订单时，将version版本号给到前端，前端提交更新时，必须携带版本号
     *      条件中，加入版本号更新，同时给版本号+1，写在同一个sql中，第一次提交版本号相同，更新成功，版本号已经+1，
     *      重复提交的更新是旧的版本号，不会更新成功，返给前端已更新
     *
     *      分布式锁，
     *      reids或者zookeeper，分布式系统新增或者更新时，获取分布式锁，把业务id+版本号id作为key
     *
     *      外部api接口调用保证幂等性
     *      根据业务来源+唯一序列号，数据库中做联合唯一索引，新增插入时，多次提交只会有一次成功，更新的话，区分业务来换+版本号更新
     */

}
