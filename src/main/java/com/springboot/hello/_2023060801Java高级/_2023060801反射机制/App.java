package com.springboot.hello._2023060801Java高级._2023060801反射机制;

public class App {
    /**
     * java的反射机制是什么
     * 系统运行时，动态获取类信息并操作类，操作对象的能力
     * 比如获取类的构造方法，内部方法，属性，接口等
     *
     * 有类信息的方式
     * Class.forName
     * .class
     * getClass
     * 通过类加载器加载指定路径的类
     *
     * 双亲委派模型
     * 当加载类时，类加载先把加载任务交给父加载器加载，如果不能加载，再进行加载类
     *
     * 类加载的过成
     * 类的字节码从元空间加载到内存
     * 验证类的完整性，然后给静态变量赋默认值，然后符号引用转换成直接引用，然后是静态变量的初始化
     * 最后是使用，卸载
     *
     * 优点
     * 保证了类的安全性和唯一性
     *
     * 每个类都有自己的命名空间，包含加载的类信息，子类可以访问父类的加载器的命名空间，保证隔离
     *
     * 节省重复加载，节省了内存空间
     *
     * 模块化和插件化，可以自己继承classLoader，自己实现类的加载、卸载
     *
     *
     * spring中有哪些用到了反射
     * 依赖注入
     * aop
     * 动态代理
     *
     *
     * 类加载的过程
     *
     * 字节码加载到内存中
     * 验证完整性
     * 准备 静态变量初默认值
     * 解析 符号引用转换成直接引用
     * 初始化
     * 使用和卸载
     */

}
